@model WebApplication1.Models.Admin

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutPageAdmin.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Adimin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Admin</h4>

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.AdminID)
    <div class="form-group">
        @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Adminname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Adminname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Adminname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ImgAdmin, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <!-- Hiển thị tên tệp ảnh hiện tại -->
            @if (!string.IsNullOrEmpty(Model.ImgAdmin))
            {
                <p id="fileNameDisplay">@Model.ImgAdmin</p> <!-- Hiển thị tên tệp ảnh hiện tại -->
            }
            else
            {
                <p id="fileNameDisplay">Chưa có ảnh</p>
            }

            <!-- Ẩn input file gốc -->
            <input type="file" name="ImageUrl" class="form-control" style="display: none;" id="fileInput" />

            <!-- Thêm button để kích hoạt file input -->
            <button type="button" id="changeFileButton" class="btn btn-primary">Chọn ảnh mới</button>

            @Html.ValidationMessageFor(model => model.ImgAdmin, "", new { @class = "text-danger" })
        </div>
    </div>

    <script>
        // Khi nhấn vào button chọn file, kích hoạt input file
        document.getElementById("changeFileButton").addEventListener("click", function () {
            document.getElementById("fileInput").click();
        });

        // Khi người dùng chọn file mới
        document.getElementById("fileInput").addEventListener("change", function (e) {
            var fileName = e.target.files[0].name; // Lấy tên file
            document.getElementById("fileNameDisplay").textContent = fileName; // Cập nhật tên file
        });
    </script>


    @*<div class="form-group">
            @Html.LabelFor(model => model.ImgAdmin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImgAdmin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImgAdmin, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <!--<div class="form-group">
        <label class="font-weight-semibold" for="imageUpload">Admin Image</label>
        <input type="file" name="ImageUrl" class="form-control" />
    </div>-->

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "qlAdmin")
</div>
